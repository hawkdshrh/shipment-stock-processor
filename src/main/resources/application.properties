quarkus.http.port=8060

kafka.bootstrap.servers=${BOOTSTRAP_SERVERS}
kafka.security.protocol=SASL_SSL
kafka.sasl.mechanism=OAUTHBEARER
kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${TOKEN_ENDPOINT_URI}" ;
kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

quarkus.kafka-streams.topics=stock-levels,updated-stock,shipments

quarkus.kafka-streams.security.protocol=SASL_SSL
quarkus.kafka-streams.sasl.mechanism=OAUTHBEARER
quarkus.kafka-streams.sasl.jaas-config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${CLIENT_ID}" \
  oauth.client.secret="${CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${TOKEN_ENDPOINT_URI}" ;
#quarkus.kafka-streams.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
kafka-streams.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

# Quick reconnection for dev mode
kafka-streams.consumer.heartbeat.interval.ms=200
kafka-streams.reconnect.backoff.max.ms=30000

mp.messaging.outgoing.shipments-out.connector=smallrye-kafka
mp.messaging.outgoing.shipments-out.topic=shipments
mp.messaging.outgoing.shipments-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.outgoing.updated-stock-out.connector=smallrye-kafka
mp.messaging.outgoing.updated-stock-out.topic=updated-stock
mp.messaging.outgoing.updated-stock-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer